// Generated by CoffeeScript 1.11.1
(function() {
  var exec, known_spawn, ref, spawn;

  ref = require('child_process'), exec = ref.exec, spawn = ref.spawn;

  known_spawn = 'ls cp mv ln ps grep awk sed find kill mkdir touch vim tmux th coffee node python pm2 npm git make ssh scp sudo'.split(' ');

  known_spawn.map(function(k) {
    return exports[k] = function(inp, args, ctx, cb) {
      var child;
      process.stdin.setRawMode(false);
      ctx._readline.pause();
      child = spawn(k, args, {
        stdio: 'inherit',
        cwd: process.cwd(),
        env: process.env
      });
      return child.on('exit', function(e, code) {
        process.stdin.setRawMode(true);
        ctx._readline.prompt();
        return cb(null);
      });
    };
  });

  exports.exec = function(inp, args, ctx, cb) {
    return exec(args.join(' '), function(err, stdout, stderr) {
      return cb(null, stdout);
    });
  };

  exports.spawn = function(inp, args, ctx, cb) {
    var child;
    process.stdin.setRawMode(false);
    ctx._readline.pause();
    if (args.length === 1) {
      args = args[0].split(' ');
    }
    child = spawn(args[0], args.slice(1), {
      stdio: 'inherit',
      cwd: process.cwd(),
      env: process.env
    });
    child.on('error', function(err) {
      process.stdin.setRawMode(true);
      ctx._readline.prompt();
      return cb(err);
    });
    return child.on('exit', function(e, code) {
      process.stdin.setRawMode(true);
      ctx._readline.prompt();
      return cb(null);
    });
  };

}).call(this);
