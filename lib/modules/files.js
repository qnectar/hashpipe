// Generated by CoffeeScript 1.11.1
(function() {
  var fs, path, resolvePath;

  fs = require('fs');

  path = require('path');

  resolvePath = function(string) {
    if (string.substr(0, 1) === '~') {
      string = process.env.HOME + string.substr(1);
    }
    return path.resolve(string);
  };

  exports.cat = function(inp, args, ctx, cb) {
    var filename;
    filename = resolvePath(args[0]);
    return fs.readFile(filename, function(err, buffer) {
      return cb(err, buffer.toString());
    });
  };

  exports['cat-stream'] = function(inp, args, ctx, cb) {
    var filename;
    filename = resolvePath(args[0]);
    return cb(null, fs.createReadStream(filename));
  };

  exports.write = function(inp, args, ctx, cb) {
    var filename;
    filename = resolvePath(args[0]);
    return fs.writeFile(filename, inp, function(err) {
      return cb(null, inp);
    });
  };

  exports.ls2 = function(inp, args, ctx, cb) {
    var filename;
    filename = resolvePath(args[0] || '.');
    return fs.readdir(filename, function(err, filenames) {
      var dirs, files;
      filenames = filenames.filter(function(f) {
        return f[0] !== '.';
      });
      files = filenames.filter(function(subfilename) {
        return fs.lstatSync(path.join(filename, subfilename)).isFile();
      });
      dirs = filenames.filter(function(subfilename) {
        return fs.lstatSync(path.join(filename, subfilename)).isDirectory();
      });
      return cb(null, {
        dirs: dirs,
        files: files
      });
    });
  };

  exports.cd = function(inp, args, ctx, cb) {
    var dirname;
    dirname = resolvePath(args[0] || process.env.HOME);
    process.chdir(dirname);
    return cb(null);
  };

}).call(this);
